name: .NET CI/CD Workflow

on:
  push:
    branches:
      - main
      - development
      - feature/CD
  pull_request:
    branches:
      - main
      - development
      - feature/CD

jobs:
  build:
    name: Build, Test and Analyze
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Restore TenantConstants.cs
        run: |
          echo "${{ secrets._TENANT_CONSTANTS_CS }}" | base64 --decode > backend/Shared/Authorization/TenantConstants.cs

      - name: Setup .NET 8 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"

      - name: Install XML Tools
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils

      - name: Restore Dependencies
        run: dotnet restore backend/Aspire/Aspire.sln

      - name: Build Application
        run: dotnet build backend/Aspire/Aspire.sln --configuration Release --no-restore

      - name: Run Tests with Coverage
        timeout-minutes: 15
        run: |
          mkdir -p test-results
          dotnet test backend/Aspire/Aspire.sln \
            --no-build \
            --configuration Release \
            --collect:"XPlat Code Coverage;Format=opencover" \
            --results-directory test-results

      - name: Generate Coverage Report
        run: |
          dotnet tool install --global dotnet-reportgenerator-globaltool
          reportgenerator \
            -reports:"test-results/**/coverage.opencover.xml" \
            -targetdir:"${{ github.workspace }}/CoverageReports" \
            -reporttypes:"Cobertura" \
            -title:"Code Coverage Report"

      - name: Validate Coverage File
        run: |
          echo "=== Coverage File Verification ==="
          ls -l "${{ github.workspace }}/CoverageReports/Cobertura.xml"
          echo "=== XML Validation ==="
          xmllint --noout "${{ github.workspace }}/CoverageReports/Cobertura.xml"
          echo "=== Coverage Summary ==="
          grep -E '<coverage|lines-covered' "${{ github.workspace }}/CoverageReports/Cobertura.xml"

      - name: SonarCloud Analysis
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=Learnathon-By-Geeky-Solutions_earendel
            -Dsonar.organization=learnathon-by-geeky-solutions
            -Dsonar.cs.cobertura.reportPaths="${{ github.workspace }}/CoverageReports/Cobertura.xml"
            -Dsonar.coverage.exclusions="**Test*.cs"
            -Dsonar.qualitygate.wait=true
            -Dsonar.qualitygate.timeout=600
            -Dsonar.projectBaseDir="${{ github.workspace }}"

  publish:
    name: Publish Application
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 20

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Restore TenantConstants.cs
        run: |
          echo "${{ secrets._TENANT_CONSTANTS_CS }}" | base64 --decode > backend/Shared/Authorization/TenantConstants.cs

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"

      - name: Build and Publish
        run: |
          dotnet publish backend/Api/Server/Server.csproj \
            -c Release \
            -o backend/Api/Server/publish

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: published-app
          path: backend/Api/Server/publish/

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: publish
    timeout-minutes: 45

    steps:
      - name: Deploy Configuration Files
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script_timeout: 600
          script: |
            mkdir -p /root/Learnathon/earendel/backend/Api/Server
            echo "${{ secrets._APPSETTINGS }}" | base64 --decode > /root/Learnathon/earendel/backend/Api/Server/appsettings.json
            echo "${{ secrets._TENANT_CONSTANTS_CS }}" | base64 --decode > /root/Learnathon/earendel/backend/Shared/Authorization/TenantConstants.cs
            chmod 644 /root/Learnathon/earendel/backend/Api/Server/appsettings.json
            chmod 644 /root/Learnathon/earendel/backend/Shared/Authorization/TenantConstants.cs

      - name: Deploy Application
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script_timeout: 1800
          script: |
            cd /root/Learnathon/earendel
            git checkout main
            git pull origin main
            cd backend
            docker-compose down --timeout 300
            docker-compose up --build -d --timeout 600