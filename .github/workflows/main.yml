name: .NET CI/CD Workflow with SonarCloud

on:
  push:
    branches:
      - main
      - development
      - feature/UserService
  pull_request:
    branches:
      - main
      - development
      - feature/UserService

jobs:
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Deploy configuration
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script_timeout: 1000
          script: |
            mkdir -p /root/Learnathon/earendel/backend
            echo "${{ secrets._APPSETTINGS }}" | base64 --decode > /root/Learnathon/earendel/backend/Api/Server/appsettings.json
            echo "${{ secrets._TENANT_CONSTANTS_CS }}" | base64 --decode > /root/Learnathon/earendel/backend/Shared/Authorization/TenantConstants.cs
            chmod 644 /root/Learnathon/earendel/backend/Api/Server/appsettings.json
            chmod 644 /root/Learnathon/earendel/backend/Shared/Authorization/TenantConstants.cs

      - name: Deploy application
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script_timeout: 1800
          script: |
            cd /root/Learnathon/earendel
            echo "Switching to main branch and pulling latest changes..."
            git checkout main
            git pull origin main
            echo "Switching to migrations branch and pulling latest changes..."
            git checkout migrations
            git pull origin migrations
            echo "Backing up migration folders from migrations branch..."
            rm -rf /tmp/migration-backup
            mkdir -p /tmp/migration-backup
            cp -r Migrations/* /tmp/migration-backup/

            echo "Switching back to main branch..."
            git checkout main

            echo "Cleaning old migration folders inside PGSql (excluding obj, bin, PGSql.csproj)..."
            cd backend/Api/Migrations/PGSql
            for folder in Candidates Tenant Identity Job Notifications Experties Evaluator Interviews Quizzes; do
            rm -rf "$folder"
            done
            cd -
            echo "Copying new migration folders into PGSql..."
            cp -r /tmp/migration-backup/* backend/Api/Migrations/PGSql/
            echo "Cleaning up..."
            rm -rf /tmp/migration-backup
            echo "Rebuilding and restarting Docker containers..."
            cd backend
            docker-compose down 
            docker-compose up -d --build


  build-and-analyze:
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET 8 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install required tools
        run: |
          dotnet tool install --global dotnet-coverage
          dotnet tool install --global dotnet-sonarscanner

      - name: Begin SonarCloud analysis
        run: |
          dotnet sonarscanner begin \
            /k:"Learnathon-By-Geeky-Solutions_earendel" \
            /o:"learnathon-by-geeky-solutions" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.cs.vscoveragexml.reportsPaths="backend/Aspire/coverage.xml" \
            /d:sonar.coverage.exclusions="**Test*.cs,**/Migrations/**" \
            /d:sonar.projectBaseDir="${{ github.workspace }}" \
            /d:sonar.qualitygate.wait=true

      - name: Restore TenantConstants.cs
        run: |
          echo "${{ secrets._TENANT_CONSTANTS_CS }}" | base64 --decode > backend/Shared/Authorization/TenantConstants.cs

      - name: Build solution
        run: dotnet restore backend/Aspire/Aspire.sln && dotnet build backend/Aspire/Aspire.sln -c Release --no-restore

      - name: Run tests with coverage collection
        run: |
          mkdir -p test-results
          dotnet-coverage collect "dotnet test backend/Aspire/Aspire.sln --no-build --configuration Release" \
            -f xml \
            -o "backend/Aspire/coverage.xml"

      - name: End SonarCloud analysis
        run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  publish:
    name: Publish Application
    runs-on: ubuntu-latest
    needs: build-and-analyze
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restore TenantConstants.cs
        run: |
          echo "${{ secrets._TENANT_CONSTANTS_CS }}" | base64 --decode > backend/Shared/Authorization/TenantConstants.cs

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"

      - name: Publish application
        run: |
          dotnet publish backend/Api/Server/Server.csproj \
            -c Release \
            -o backend/Api/Server/publish

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: published-app
          path: backend/Api/Server/publish/
